# Step 1: Retrieve Access Token for Azure SQL
$tokenResponse = Invoke-RestMethod -Uri "http://169.254.169.254/metadata/identity/oauth2/token?api-version=2019-08-01&resource=https://database.windows.net/" `
    -Headers @{Metadata="true"} `
    -Method GET
$accessToken = $tokenResponse.access_token

# Step 2: Define Source and Destination Details
$SourceServer = "my-azure-sql-server.database.windows.net"
$DestinationServer = "my-azure-sql-server.database.windows.net"
$SourceDatabase = "SourceDB"   
$DestinationDatabase = "DestinationDB"
$Schema = "dbo"

# Step 3: Define Tables to Copy (Leave empty to copy all tables)
# Uncomment below to copy specific tables:
# $selectedTables = @("Customers", "Orders")
$selectedTables = @()  # Empty means copy all tables

# Step 4: Get All Tables from the Source Database (if no specific tables are selected)
if ($selectedTables.Count -eq 0) {
    $tablesQuery = "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE';"
    $tables = Invoke-Sqlcmd -ServerInstance $SourceServer -Database $SourceDatabase -AccessToken $accessToken -Query $tablesQuery
    $selectedTables = $tables.TABLE_NAME  # Get all tables dynamically
}

# Step 5: Loop through tables and copy data
foreach ($table in $selectedTables) {
    Write-Host "Copying table: $Schema.$table"

    # Ensure correct table name formatting
    $tableFormatted = "[$Schema].[$table]"

    # Step 5.1: Get Data from Source Database
    $fetchDataQuery = "SELECT * FROM $tableFormatted;"
    $sourceData = Invoke-Sqlcmd -ServerInstance $SourceServer -Database $SourceDatabase -AccessToken $accessToken -Query $fetchDataQuery

    if ($sourceData.Count -eq 0) {
        Write-Host "‚ö†Ô∏è No data found in source table: $Schema.$table. Skipping..."
        continue
    }

    # Step 5.2: Build SQL Query for Data Insertion (Manually Construct for Each Row)
    $columns = ($sourceData | Get-Member -MemberType NoteProperty).Name -join ", "
    $valuesList = @()

    foreach ($row in $sourceData) {
        $values = $columns.Split(", ") | ForEach-Object { "'$($row.$_ )'" }  # Quote string values
        $valuesList += "($($values -join ', '))"
    }

    # Convert array to proper SQL VALUES format
    $valuesToInsert = $valuesList -join ", "

    # Final INSERT Query
    if ($valuesToInsert -ne "") {
        $insertQuery = "INSERT INTO $tableFormatted ($columns) VALUES $valuesToInsert;"
        Write-Host "üöÄ Executing SQL Insert for table: $Schema.$table"

        try {
            Invoke-Sqlcmd -ServerInstance $DestinationServer -Database $DestinationDatabase -AccessToken $accessToken -Query $insertQuery
            Write-Host "‚úÖ Successfully copied $Schema.$table"
        } catch {
            Write-Host "‚ùå Failed to copy $Schema.$table - Error: $_"
        }
    }
}

Write-Host "üéâ Data Copy Process Completed!"
