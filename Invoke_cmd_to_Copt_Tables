# Step 1: Retrieve Access Token for Azure SQL
$tokenResponse = Invoke-RestMethod -Uri "http://169.254.169.254/metadata/identity/oauth2/token?api-version=2019-08-01&resource=https://database.windows.net/" `
    -Headers @{Metadata="true"} `
    -Method GET
$accessToken = $tokenResponse.access_token

# Step 2: Define Source and Destination Details
$SourceServer = "my-azure-sql-server.database.windows.net"
$DestinationServer = "my-azure-sql-server.database.windows.net"
$SourceDatabase = "SourceDB"   
$DestinationDatabase = "DestinationDB"
$Schema = "dbo"

# Step 3: Define Tables to Copy (Leave empty to copy all tables)
# Uncomment below to copy specific tables:
# $selectedTables = @("Customers", "Orders")
$selectedTables = @()  # Empty means copy all tables

# Step 4: Get All Tables from the Source Database (if no specific tables are selected)
if ($selectedTables.Count -eq 0) {
    $tablesQuery = "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE';"
    $tables = Invoke-Sqlcmd -ServerInstance $SourceServer -Database $SourceDatabase -AccessToken $accessToken -Query $tablesQuery
    $selectedTables = $tables.TABLE_NAME  # Get all tables dynamically
}

# Step 5: Loop through tables and copy data
foreach ($table in $selectedTables) {
    Write-Host "üîÑ Copying table: $Schema.$table"

    # Step 5.1: Fetch Data from Source Database
    $fetchDataQuery = "SELECT * FROM [$Schema].[$table];"
    $sourceData = Invoke-Sqlcmd -ServerInstance $SourceServer -Database $SourceDatabase -AccessToken $accessToken -Query $fetchDataQuery

    if ($sourceData.Count -eq 0) {
        Write-Host "‚ö†Ô∏è No data found in source table: $Schema.$table. Skipping..."
        continue
    }

    # Step 5.2: Get Column Names for Dynamic Insertion
    $columns = ($sourceData | Get-Member -MemberType NoteProperty).Name -join ", "

    # Step 5.3: Insert Data Row by Row
    foreach ($row in $sourceData) {
        # Convert each column's value into a properly formatted SQL value
        $values = @()
        foreach ($column in ($sourceData | Get-Member -MemberType NoteProperty).Name) {
            $value = $row.$column
            if ($null -eq $value) {
                $values += "NULL"  # Handle NULL values
            } elseif ($value -match "^[0-9]+(\.[0-9]+)?$") {
                $values += "$value"  # Numeric values (integers, floats)
            } else {
                $safeValue = $value -replace "'", "''"  # Escape single quotes
                $values += "'$safeValue'"  # Treat as a string
            }
        }

        # Construct final INSERT statement
        $insertQuery = "INSERT INTO [$Schema].[$table] ($columns) VALUES ($($values -join ', '));"
        Write-Host "üöÄ Inserting row into $Schema.$table"

        try {
            Invoke-Sqlcmd -ServerInstance $DestinationServer -Database $DestinationDatabase -AccessToken $accessToken -Query $insertQuery
        } catch {
            Write-Host "‚ùå Failed to insert row in $Schema.$table - Error: $_"
        }
    }

    Write-Host "‚úÖ Successfully copied $Schema.$table"
}

Write-Host "üéâ Data Copy Process Completed!"
