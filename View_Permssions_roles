-- ================================
-- View Users, Roles, and Permissions
-- ================================

-- 1. Permissions at database level
SELECT 
    dp.name AS principal_name,
    dp.type_desc AS principal_type,
    NULL AS member_of_role,
    perm.permission_name,
    perm.class_desc,
    OBJECT_NAME(perm.major_id) AS object_name,
    'DATABASE' AS permission_scope
FROM sys.database_permissions perm
JOIN sys.database_principals dp ON perm.grantee_principal_id = dp.principal_id
WHERE dp.name NOT IN ('dbo', 'guest', 'INFORMATION_SCHEMA', 'sys', 'public')

UNION ALL

-- 2. Role membership (users inside roles)
SELECT 
    members.name AS principal_name,
    members.type_desc AS principal_type,
    roles.name AS member_of_role,
    NULL AS permission_name,
    NULL AS class_desc,
    NULL AS object_name,
    'DATABASE ROLE MEMBERSHIP' AS permission_scope
FROM sys.database_role_members rm
JOIN sys.database_principals roles ON rm.role_principal_id = roles.principal_id
JOIN sys.database_principals members ON rm.member_principal_id = members.principal_id
WHERE roles.name NOT IN ('dbo', 'guest')

UNION ALL

-- 3. Server-level permissions
SELECT 
    sp.name AS principal_name,
    sp.type_desc AS principal_type,
    NULL AS member_of_role,
    spm.permission_name,
    spm.class_desc,
    NULL AS object_name,
    'SERVER' AS permission_scope
FROM sys.server_permissions spm
JOIN sys.server_principals sp ON spm.grantee_principal_id = sp.principal_id
WHERE sp.name NOT IN ('sa', 'public', 'NT AUTHORITY\SYSTEM', 'NT SERVICE\SQLWriter')

ORDER BY principal_name, permission_scope, member_of_role, permission_name;
